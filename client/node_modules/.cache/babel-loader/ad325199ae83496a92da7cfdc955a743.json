{"ast":null,"code":"var _jsxFileName = \"/home/alenbasar/Development/blitzkarter/client/src/components/Flashcard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport axios from 'axios';\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Flashcard = _ref => {\n  _s();\n\n  let {\n    card\n  } = _ref;\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const [animateExit, setAnimateExit] = useState(false);\n  const [selectedId, setSelectedId] = useState(null); // const frontEl = useRef();\n  // const backEl = useRef();\n  // function setMaxHeight() {\n  //   const frontHeight = frontEl.current.getBoundingClientRect().height;\n  //   const backHeight = backEl.current.getBoundingClientRect().height;\n  //   setHeight(Math.max(frontHeight, backHeight, 100));\n  // }\n  // useEffect(setMaxHeight, [card.question, card.answer, card.options]);\n  // useEffect(() => {\n  //   window.addEventListener('resize', setMaxHeight);\n  //   return () => window.removeEventListener('resize', setMaxHeight);\n  // }, []);\n\n  const handleClick = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n\n    if (e.target.value === card.answer) {\n      setIsFlipped(true);\n    }\n\n    return;\n  };\n\n  const handleBackClick = e => {\n    setIsFlipped(false);\n  };\n\n  const handleDeleteClick = async e => {\n    console.log(e.target.value);\n    setAnimateExit(true);\n\n    try {\n      await axios.delete(`http://localhost:8000/cards/${e.target.value}`, {\n        params: e.target.value\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-flashcard\",\n    children: [card !== '' ? /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      isFlipped: isFlipped,\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        layoutId: card.id,\n        onClick: () => setSelectedId(card.id),\n        className: `c-flashcard__front animate__animated ${animateExit ? 'hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(motion.h1, {\n          className: \"c-flashcard__front__question\",\n          children: card.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(motion.ul, {\n          className: \"c-flashcard__front__options\",\n          children: card.options.map((option, index) => /*#__PURE__*/_jsxDEV(motion.li, {\n            children: /*#__PURE__*/_jsxDEV(motion.button, {\n              className: \"c-flashcard__front__options__option\",\n              onClick: handleClick,\n              value: option,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        layoutId: card.id,\n        className: `c-flashcard__back animate__animated ${animateExit ? 'hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"c-flashcard__back__answer\",\n          children: card.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-flashcard__back__options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"c-flashcard__back__options__back-btn\",\n            onClick: handleBackClick,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"c-flashcard__back__options__delete-btn\",\n            onClick: handleDeleteClick,\n            value: card._id,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-flashcard__add-new\",\n      children: /*#__PURE__*/_jsxDEV(AddCircleOutlineRoundedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedId && /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        isFlipped: isFlipped,\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          animate: {\n            x: 300\n          },\n          layoutId: selectedId,\n          className: `c-flashcard__front animate__animated ${animateExit ? 'hidden' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"c-flashcard__front__question\",\n            children: card.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"c-flashcard__front__options\",\n            children: card.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"c-flashcard__front__options__option\",\n                onClick: handleClick,\n                value: option,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          layoutId: selectedId,\n          className: `c-flashcard__back animate__animated ${animateExit ? 'hidden' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"c-flashcard__back__answer\",\n            children: card.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"c-flashcard__back__options\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"c-flashcard__back__options__back-btn\",\n              onClick: handleBackClick,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"c-flashcard__back__options__delete-btn\",\n              onClick: handleDeleteClick,\n              value: card._id,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Flashcard, \"qnXZuWuLASbHcKYj8VFmes9J+14=\");\n\n_c = Flashcard;\nexport default Flashcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"sources":["/home/alenbasar/Development/blitzkarter/client/src/components/Flashcard.js"],"names":["React","useState","useEffect","useRef","ReactCardFlip","axios","AddCircleOutlineRoundedIcon","motion","AnimatePresence","Flashcard","card","isFlipped","setIsFlipped","height","setHeight","animateExit","setAnimateExit","selectedId","setSelectedId","handleClick","e","preventDefault","console","log","target","value","answer","handleBackClick","handleDeleteClick","delete","params","error","id","question","options","map","option","index","_id","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,2BAAP,MAAwC,6CAAxC;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;;;AAEA,MAAMC,SAAS,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,SAAD,CAApC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,IAAD,CAA5C,CAJ8B,CAM9B;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMkB,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;;AAEA,QAAIL,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmBf,IAAI,CAACgB,MAA5B,EAAoC;AAClCd,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED;AACD,GATD;;AAUA,QAAMe,eAAe,GAAIP,CAAD,IAAO;AAC7BR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAGA,QAAMgB,iBAAiB,GAAG,MAAOR,CAAP,IAAa;AACrCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAT,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAI;AACF,YAAMX,KAAK,CAACwB,MAAN,CAAc,+BAA8BT,CAAC,CAACI,MAAF,CAASC,KAAM,EAA3D,EAA8D;AAClEK,QAAAA,MAAM,EAAEV,CAAC,CAACI,MAAF,CAASC;AADiD,OAA9D,CAAN;AAGD,KAJD,CAIE,OAAOM,KAAP,EAAc;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACGrB,IAAI,KAAK,EAAT,gBACC,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEC,SAA1B;AAAA,8BACE,QAAC,MAAD,CAAQ,GAAR;AACE,QAAA,QAAQ,EAAED,IAAI,CAACsB,EADjB;AAEE,QAAA,OAAO,EAAE,MAAMd,aAAa,CAACR,IAAI,CAACsB,EAAN,CAF9B;AAGE,QAAA,SAAS,EAAG,wCACVjB,WAAW,GAAG,QAAH,GAAc,EAC1B,EALH;AAAA,gCAOE,QAAC,MAAD,CAAQ,EAAR;AAAW,UAAA,SAAS,EAAC,8BAArB;AAAA,oBACGL,IAAI,CAACuB;AADR;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,MAAD,CAAQ,EAAR;AAAW,UAAA,SAAS,EAAC,6BAArB;AAAA,oBACGvB,IAAI,CAACwB,OAAL,CAAaC,GAAb,CAAiB,CAACC,MAAD,EAASC,KAAT,kBAChB,QAAC,MAAD,CAAQ,EAAR;AAAA,mCACE,QAAC,MAAD,CAAQ,MAAR;AACE,cAAA,SAAS,EAAC,qCADZ;AAEE,cAAA,OAAO,EAAElB,WAFX;AAGE,cAAA,KAAK,EAAEiB,MAHT;AAAA,wBAKGA;AALH;AAAA;AAAA;AAAA;AAAA;AADF,aAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA0BE,QAAC,MAAD,CAAQ,GAAR;AACE,QAAA,QAAQ,EAAE3B,IAAI,CAACsB,EADjB;AAEE,QAAA,SAAS,EAAG,uCACVjB,WAAW,GAAG,QAAH,GAAc,EAC1B,EAJH;AAAA,gCAME;AAAI,UAAA,SAAS,EAAC,2BAAd;AAAA,oBAA2CL,IAAI,CAACgB;AAAhD;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,sCADZ;AAEE,YAAA,OAAO,EAAEC,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,SAAS,EAAC,wCADZ;AAEE,YAAA,OAAO,EAAEC,iBAFX;AAGE,YAAA,KAAK,EAAElB,IAAI,CAAC4B,GAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAoDC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE,QAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArDJ,eA0DE,QAAC,eAAD;AAAA,gBACGrB,UAAU,iBACT,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEN,SAA1B;AAAA,gCACE,QAAC,MAAD,CAAQ,GAAR;AACE,UAAA,OAAO,EAAE;AAAE4B,YAAAA,CAAC,EAAE;AAAL,WADX;AAEE,UAAA,QAAQ,EAAEtB,UAFZ;AAGE,UAAA,SAAS,EAAG,wCACVF,WAAW,GAAG,QAAH,GAAc,EAC1B,EALH;AAAA,kCAOE;AAAI,YAAA,SAAS,EAAC,8BAAd;AAAA,sBAA8CL,IAAI,CAACuB;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAI,YAAA,SAAS,EAAC,6BAAd;AAAA,sBACGvB,IAAI,CAACwB,OAAL,CAAaC,GAAb,CAAiB,CAACC,MAAD,EAASC,KAAT,kBAChB;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,qCADZ;AAEE,gBAAA,OAAO,EAAElB,WAFX;AAGE,gBAAA,KAAK,EAAEiB,MAHT;AAAA,0BAKGA;AALH;AAAA;AAAA;AAAA;AAAA;AADF,eAASC,KAAT;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE,QAAC,MAAD,CAAQ,GAAR;AACE,UAAA,QAAQ,EAAEpB,UADZ;AAEE,UAAA,SAAS,EAAG,uCACVF,WAAW,GAAG,QAAH,GAAc,EAC1B,EAJH;AAAA,kCAME;AAAI,YAAA,SAAS,EAAC,2BAAd;AAAA,sBAA2CL,IAAI,CAACgB;AAAhD;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,sCADZ;AAEE,cAAA,OAAO,EAAEC,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,SAAS,EAAC,wCADZ;AAEE,cAAA,OAAO,EAAEC,iBAFX;AAGE,cAAA,KAAK,EAAElB,IAAI,CAAC4B,GAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiHD,CA/JD;;GAAM7B,S;;KAAAA,S;AAiKN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport axios from 'axios';\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst Flashcard = ({ card }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const [animateExit, setAnimateExit] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n\n  // const frontEl = useRef();\n  // const backEl = useRef();\n\n  // function setMaxHeight() {\n  //   const frontHeight = frontEl.current.getBoundingClientRect().height;\n  //   const backHeight = backEl.current.getBoundingClientRect().height;\n  //   setHeight(Math.max(frontHeight, backHeight, 100));\n  // }\n\n  // useEffect(setMaxHeight, [card.question, card.answer, card.options]);\n  // useEffect(() => {\n  //   window.addEventListener('resize', setMaxHeight);\n  //   return () => window.removeEventListener('resize', setMaxHeight);\n  // }, []);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n\n    if (e.target.value === card.answer) {\n      setIsFlipped(true);\n    }\n\n    return;\n  };\n  const handleBackClick = (e) => {\n    setIsFlipped(false);\n  };\n  const handleDeleteClick = async (e) => {\n    console.log(e.target.value);\n    setAnimateExit(true);\n    try {\n      await axios.delete(`http://localhost:8000/cards/${e.target.value}`, {\n        params: e.target.value,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className='c-flashcard'>\n      {card !== '' ? (\n        <ReactCardFlip isFlipped={isFlipped}>\n          <motion.div\n            layoutId={card.id}\n            onClick={() => setSelectedId(card.id)}\n            className={`c-flashcard__front animate__animated ${\n              animateExit ? 'hidden' : ''\n            }`}\n          >\n            <motion.h1 className='c-flashcard__front__question'>\n              {card.question}\n            </motion.h1>\n            <motion.ul className='c-flashcard__front__options'>\n              {card.options.map((option, index) => (\n                <motion.li key={index}>\n                  <motion.button\n                    className='c-flashcard__front__options__option'\n                    onClick={handleClick}\n                    value={option}\n                  >\n                    {option}\n                  </motion.button>\n                </motion.li>\n              ))}\n            </motion.ul>\n          </motion.div>\n\n          <motion.div\n            layoutId={card.id}\n            className={`c-flashcard__back animate__animated ${\n              animateExit ? 'hidden' : ''\n            }`}\n          >\n            <h1 className='c-flashcard__back__answer'>{card.answer}</h1>\n            <div className='c-flashcard__back__options'>\n              <button\n                className='c-flashcard__back__options__back-btn'\n                onClick={handleBackClick}\n              >\n                Back\n              </button>\n              <button\n                className='c-flashcard__back__options__delete-btn'\n                onClick={handleDeleteClick}\n                value={card._id}\n              >\n                Delete\n              </button>\n            </div>\n          </motion.div>\n        </ReactCardFlip>\n      ) : (\n        <div className='c-flashcard__add-new'>\n          <AddCircleOutlineRoundedIcon />\n        </div>\n      )}\n\n      <AnimatePresence>\n        {selectedId && (\n          <ReactCardFlip isFlipped={isFlipped}>\n            <motion.div\n              animate={{ x: 300 }}\n              layoutId={selectedId}\n              className={`c-flashcard__front animate__animated ${\n                animateExit ? 'hidden' : ''\n              }`}\n            >\n              <h1 className='c-flashcard__front__question'>{card.question}</h1>\n              <ul className='c-flashcard__front__options'>\n                {card.options.map((option, index) => (\n                  <li key={index}>\n                    <button\n                      className='c-flashcard__front__options__option'\n                      onClick={handleClick}\n                      value={option}\n                    >\n                      {option}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </motion.div>\n\n            <motion.div\n              layoutId={selectedId}\n              className={`c-flashcard__back animate__animated ${\n                animateExit ? 'hidden' : ''\n              }`}\n            >\n              <h1 className='c-flashcard__back__answer'>{card.answer}</h1>\n              <div className='c-flashcard__back__options'>\n                <button\n                  className='c-flashcard__back__options__back-btn'\n                  onClick={handleBackClick}\n                >\n                  Back\n                </button>\n                <button\n                  className='c-flashcard__back__options__delete-btn'\n                  onClick={handleDeleteClick}\n                  value={card._id}\n                >\n                  Delete\n                </button>\n              </div>\n            </motion.div>\n          </ReactCardFlip>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default Flashcard;\n"]},"metadata":{},"sourceType":"module"}