{"ast":null,"code":"var _jsxFileName = \"/home/alenbasar/Development/blitzkarter/client/src/components/NewFlashcard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewFlashcard = props => {\n  _s();\n\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [options, setOptions] = useState('');\n  const [isPosted, setIsPosted] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const optionsArray = options.split(',').filter(o => {\n      return o != ' ';\n    });\n    const postBody = {\n      question: question,\n      answer: answer,\n      options: optionsArray\n    };\n    setQuestion('');\n    setAnswer('');\n    setOptions('');\n\n    try {\n      await axios.post('http://localhost:8000/cards', postBody);\n    } catch (err) {\n      console.error(err);\n    }\n\n    props.isPosted(false);\n    console.log(postBody);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-new-flashcard\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [\">\", /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Create a new card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Question\",\n          value: question,\n          onChange: e => {\n            setQuestion(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Answer\",\n          value: answer,\n          onChange: e => {\n            setAnswer(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Options (separate with \\\",\\\")\",\n          value: options // cols='20'\n          ,\n          rows: \"10\",\n          onChange: e => {\n            setOptions(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create New Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewFlashcard, \"N7R8WFeSbP/CMkhUfAYxqc1N5KU=\");\n\n_c = NewFlashcard;\nexport default NewFlashcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFlashcard\");","map":{"version":3,"sources":["/home/alenbasar/Development/blitzkarter/client/src/components/NewFlashcard.js"],"names":["React","useState","axios","NewFlashcard","props","question","setQuestion","answer","setAnswer","options","setOptions","isPosted","setIsPosted","handleSubmit","e","preventDefault","optionsArray","split","filter","o","postBody","post","err","console","error","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMY,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,YAAY,GAAGP,OAAO,CAACQ,KAAR,CAAc,GAAd,EAAmBC,MAAnB,CAA2BC,CAAD,IAAO;AACpD,aAAOA,CAAC,IAAI,GAAZ;AACD,KAFoB,CAArB;AAIA,UAAMC,QAAQ,GAAG;AACff,MAAAA,QAAQ,EAAEA,QADK;AAEfE,MAAAA,MAAM,EAAEA,MAFO;AAGfE,MAAAA,OAAO,EAAEO;AAHM,KAAjB;AAMAV,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;;AAEA,QAAI;AACF,YAAMR,KAAK,CAACmB,IAAN,CAAW,6BAAX,EAA0CD,QAA1C,CAAN;AACD,KAFD,CAEE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;;AAEDlB,IAAAA,KAAK,CAACO,QAAN,CAAe,KAAf;AACAY,IAAAA,OAAO,CAACE,GAAR,CAAYL,QAAZ;AACD,GAzBD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEP,YAA9B;AAAA,mCAEE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,KAAK,EAAER,QAHT;AAIE,UAAA,QAAQ,EAAGS,CAAD,IAAO;AACfR,YAAAA,WAAW,CAACQ,CAAC,CAACY,MAAF,CAASC,KAAV,CAAX;AACD;AANH;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,QAFd;AAGE,UAAA,KAAK,EAAEpB,MAHT;AAIE,UAAA,QAAQ,EAAGO,CAAD,IAAO;AACfN,YAAAA,SAAS,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV,CAAT;AACD;AANH;AAAA;AAAA;AAAA;AAAA,gBAVF,eAkBE;AACE,UAAA,WAAW,EAAC,+BADd;AAEE,UAAA,KAAK,EAAElB,OAFT,CAGE;AAHF;AAIE,UAAA,IAAI,EAAC,IAJP;AAKE,UAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,YAAAA,UAAU,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV,CAAV;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CArED;;GAAMxB,Y;;KAAAA,Y;AAuEN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst NewFlashcard = (props) => {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [options, setOptions] = useState('');\n  const [isPosted, setIsPosted] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const optionsArray = options.split(',').filter((o) => {\n      return o != ' ';\n    });\n\n    const postBody = {\n      question: question,\n      answer: answer,\n      options: optionsArray,\n    };\n\n    setQuestion('');\n    setAnswer('');\n    setOptions('');\n\n    try {\n      await axios.post('http://localhost:8000/cards', postBody);\n    } catch (err) {\n      console.error(err);\n    }\n\n    props.isPosted(false);\n    console.log(postBody);\n  };\n\n  return (\n    <div className='c-new-flashcard'>\n      <form method='post' onSubmit={handleSubmit}>\n        >\n        <fieldset>\n          <legend>Create a new card</legend>\n          <input\n            type='text'\n            placeholder='Question'\n            value={question}\n            onChange={(e) => {\n              setQuestion(e.target.value);\n            }}\n          />\n          <input\n            type='text'\n            placeholder='Answer'\n            value={answer}\n            onChange={(e) => {\n              setAnswer(e.target.value);\n            }}\n          />\n          <textarea\n            placeholder='Options (separate with \",\")'\n            value={options}\n            // cols='20'\n            rows='10'\n            onChange={(e) => {\n              setOptions(e.target.value);\n            }}\n          />\n        </fieldset>\n        <button>Create New Card</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewFlashcard;\n"]},"metadata":{},"sourceType":"module"}