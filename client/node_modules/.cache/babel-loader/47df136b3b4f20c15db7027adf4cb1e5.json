{"ast":null,"code":"var _jsxFileName = \"/home/alenbasar/Development/blitzkarter/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FlashcardList from './components/FlashcardList';\nimport NewFlashcard from './components/NewFlashcard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAKE_DATA = [{\n  _id: '6204b2227f734e9b938cc273',\n  question: 'What is this db?',\n  answer: 'mongodb',\n  options: ['mongodb', 'mariaDB'],\n  __v: 0\n}, {\n  _id: '6204c9fa41c3a26088a3b13c',\n  question: \"What's 2x2?\",\n  answer: '4',\n  options: ['4', 'Blacktown', '8'],\n  __v: 0\n}];\n\nfunction App(props) {\n  _s();\n\n  const [newCardAnimate, setNewCardAnimate] = useState(false);\n  const [cardData, setCardData] = useState(FAKE_DATA);\n  const [newFlashcard, setNewFlashcard] = useState();\n\n  const getCardsData = async () => {\n    try {\n      const res = await fetch('http://localhost:8000/cards');\n      const data = await res.json(); //   console.log(data.map((card, idx) => card.question));\n\n      setCardData(data); //   return JSON.stringify(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getCardsData();\n  }, []);\n\n  const isNewFlashcard = newFlashcard => {\n    setNewFlashcard(newFlashcard);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"c-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"c-header__logo\",\n        children: \"BlitzKarter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"c-header__nav\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"c-header__nav__btn\",\n            onClick: () => {\n              setNewCardAnimate(!newCardAnimate);\n            },\n            children: newCardAnimate ? 'My Cards' : 'Create New'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"c-body\",\n      children: newFlashcard ? /*#__PURE__*/_jsxDEV(NewFlashcard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FlashcardList, {\n        cardData: cardData,\n        onAddNew: isNewFlashcard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q/T7drJU/3KAjsOX+7icx13hFXA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/alenbasar/Development/blitzkarter/client/src/App.js"],"names":["React","useState","useEffect","FlashcardList","NewFlashcard","FAKE_DATA","_id","question","answer","options","__v","App","props","newCardAnimate","setNewCardAnimate","cardData","setCardData","newFlashcard","setNewFlashcard","getCardsData","res","fetch","data","json","error","console","isNewFlashcard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,sCAAP;;AAEA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,GAAG,EAAE,0BADP;AAEEC,EAAAA,QAAQ,EAAE,kBAFZ;AAGEC,EAAAA,MAAM,EAAE,SAHV;AAIEC,EAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,CAJX;AAKEC,EAAAA,GAAG,EAAE;AALP,CADgB,EAQhB;AACEJ,EAAAA,GAAG,EAAE,0BADP;AAEEC,EAAAA,QAAQ,EAAE,aAFZ;AAGEC,EAAAA,MAAM,EAAE,GAHV;AAIEC,EAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,WAAN,EAAmB,GAAnB,CAJX;AAKEC,EAAAA,GAAG,EAAE;AALP,CARgB,CAAlB;;AAiBA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACI,SAAD,CAAxC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,EAAhD;;AAEA,QAAMkB,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CAFE,CAGF;;AACAP,MAAAA,WAAW,CAACM,IAAD,CAAX,CAJE,CAKF;AACD,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAVD;;AAYAtB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMO,cAAc,GAAIT,YAAD,IAAkB;AACvCC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,+BACE;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,oBADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACbH,cAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD,aAJH;AAAA,sBAMGA,cAAc,GAAG,UAAH,GAAgB;AANjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA,gBACGI,YAAY,gBACX,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADW,gBAGX,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEF,QAAzB;AAAmC,QAAA,QAAQ,EAAEW;AAA7C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAnDQf,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FlashcardList from './components/FlashcardList';\nimport NewFlashcard from './components/NewFlashcard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst FAKE_DATA = [\n  {\n    _id: '6204b2227f734e9b938cc273',\n    question: 'What is this db?',\n    answer: 'mongodb',\n    options: ['mongodb', 'mariaDB'],\n    __v: 0,\n  },\n  {\n    _id: '6204c9fa41c3a26088a3b13c',\n    question: \"What's 2x2?\",\n    answer: '4',\n    options: ['4', 'Blacktown', '8'],\n    __v: 0,\n  },\n];\n\nfunction App(props) {\n  const [newCardAnimate, setNewCardAnimate] = useState(false);\n  const [cardData, setCardData] = useState(FAKE_DATA);\n  const [newFlashcard, setNewFlashcard] = useState();\n\n  const getCardsData = async () => {\n    try {\n      const res = await fetch('http://localhost:8000/cards');\n      const data = await res.json();\n      //   console.log(data.map((card, idx) => card.question));\n      setCardData(data);\n      //   return JSON.stringify(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getCardsData();\n  }, []);\n\n  const isNewFlashcard = (newFlashcard) => {\n    setNewFlashcard(newFlashcard);\n  };\n\n  return (\n    <div className='App'>\n      <header className='c-header'>\n        <h1 className='c-header__logo'>BlitzKarter</h1>\n        <ul className='c-header__nav'>\n          <li>\n            <button\n              className='c-header__nav__btn'\n              onClick={() => {\n                setNewCardAnimate(!newCardAnimate);\n              }}\n            >\n              {newCardAnimate ? 'My Cards' : 'Create New'}\n            </button>\n          </li>\n        </ul>\n      </header>\n      <section className='c-body'>\n        {newFlashcard ? (\n          <NewFlashcard />\n        ) : (\n          <FlashcardList cardData={cardData} onAddNew={isNewFlashcard} />\n        )}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}